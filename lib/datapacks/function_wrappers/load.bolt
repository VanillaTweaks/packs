from functools import cache

from lib.resource_location import ResourceLocation

from lib:base_locations import vt
from lib:datapacks/load_status import load_status
from lib:datapacks/lantern_load import lantern_load


# This is cached to prevent a circular import.
@cache
def import_load_tag_not_loaded_fault_check():
    import lib:datapacks/fault_checking/load_tag_not_loaded


@cache
def load(base_location):
    # Adds to a resource location's load function, which is (indirectly) called by
    #  `#minecraft:load`.
    #
    # >>> append function load(pack):
    # >>>     # This runs on load.

    load_status.set(vt)
    load_status.set(base_location)

    load_function = base_location / "_load"

    # TODO: Remove `str`.
    append function_tag (lantern_load / "load") {"values": [str(load_function)]}

    import_load_tag_not_loaded_fault_check()

    return load_function
