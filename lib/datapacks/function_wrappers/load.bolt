from functools import cache

from lib.resource_location import ResourceLocation

# TODO: Remove import aliases.
import lib:datapacks/load_status as load_status
from lib:base_locations import vt
from lib:datapacks/lantern_load import lantern_load


# This is cached to prevent a circular import.
@cache
def import_load_tag_not_loaded_fault_check():
    # TODO: Remove import aliases.
    import lib:datapacks/fault_checking/load_tag_not_loaded as _


@cache
def load(base_location: ResourceLocation):
    """Adds to a resource location's load function, which is (indirectly) called by
    `#minecraft:load`.

    >>> append function load(pack):
    >>>     # This runs on load.
    """

    load_status.set(vt)
    load_status.set(base_location)

    load_function = base_location / "_load"

    append function_tag (lantern_load / "load") {"values": [load_function]}

    import_load_tag_not_loaded_fault_check()

    return load_function
